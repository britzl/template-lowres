local ATTACK = hash("attack")
local JUMP = hash("jump")
local LEFT = hash("left")
local RIGHT = hash("right")
local UP = hash("up")
local DOWN = hash("down")

local SET_MATERIAL_ACTIONS = {
	[hash("material1")] = hash("lowrez"),
	[hash("material2")] = hash("sps"),
}

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("camera#camera", "acquire_camera_focus")
	go.animate("logo", "euler.z", go.PLAYBACK_LOOP_FORWARD, 360, go.EASING_LINEAR, 5)
	particlefx.play("stars#stars")
	self.actions = {}
end

function update(self, dt)
	local pos = go.get_position()
	if self.actions[LEFT] then
		pos.x = pos.x - 20 * dt
	elseif self.actions[RIGHT] then
		pos.x = pos.x + 20 * dt
	end
	if self.actions[UP] then
		pos.y = pos.y + 20 * dt
	elseif self.actions[DOWN] then
		pos.y = pos.y - 20 * dt
	end
	if self.actions[ATTACK] then
		print("attack")
	end
	if self.actions[JUMP] then
		print("jump")
	end
	go.set_position(pos)
	self.actions = {}
end

function on_message(self, message_id, message, sender)
	if message_id == hash("handle_action") then
		self.actions[message.action] = true
	end
end

function on_input(self, action_id, action)
	if action_id and SET_MATERIAL_ACTIONS[action_id] then
		if action.pressed then
			print(SET_MATERIAL_ACTIONS[action_id])
			msg.post("@render:", "set_upscale_material", { material = SET_MATERIAL_ACTIONS[action_id] })
		end
	elseif action_id and (action.pressed or action.repeated) then
		self.actions[action_id] = true
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
